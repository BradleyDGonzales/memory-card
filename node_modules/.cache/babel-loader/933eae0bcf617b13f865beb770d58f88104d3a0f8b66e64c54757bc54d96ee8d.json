{"ast":null,"code":"var _jsxFileName = \"/home/bradley/repos/memory-card/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport { render } from '@testing-library/react';\nimport { useEffect, useState } from 'react';\nimport bulkImages from './bulkImages';\nimport fail from '../sound/fail.ogg';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialLists = [{\n  imgName: 'ann',\n  clicked: false\n}, {\n  imgName: 'arisu',\n  clicked: false\n}, {\n  imgName: 'chishiya',\n  clicked: false\n}, {\n  imgName: 'chota',\n  clicked: false\n}, {\n  imgName: 'karube',\n  clicked: false\n}, {\n  imgName: 'kuina',\n  clicked: false\n}, {\n  imgName: 'kuzuryu',\n  clicked: false\n}, {\n  imgName: 'kyuma',\n  clicked: false\n}, {\n  imgName: 'lastboss',\n  clicked: false\n}, {\n  imgName: 'niragi',\n  clicked: false\n}, {\n  imgName: 'tatta',\n  clicked: false\n}, {\n  imgName: 'usagi',\n  clicked: false\n}];\nconst Game = () => {\n  _s();\n  const [click, setClick] = useState(initialLists);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(score);\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle.\n    while (currentIndex !== 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  }\n  useEffect(() => {\n    shuffle(bulkImages);\n  });\n  function handleImgClick(e) {\n    const audio = new Audio(fail);\n    audio.preload = \"auto\";\n    const imgSrc = e.target.src;\n    const currentImgName = imgSrc.substring(imgSrc.lastIndexOf('/') + 1, imgSrc.indexOf('.'));\n    const updatedImg = click.map(img => {\n      if (img.imgName === currentImgName) {\n        if (img.clicked === true) {\n          setScore(score - score);\n          audio.play();\n          return img;\n        } else {\n          setScore(score + 1);\n          if (score >= bestScore) {\n            setBestScore(score + 1);\n          }\n          return {\n            ...img,\n            clicked: true\n          };\n        }\n      } else {\n        return img;\n      }\n    });\n    setClick(updatedImg);\n  }\n  console.log(click);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      bestScore: bestScore,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: bulkImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: e => handleImgClick(e),\n          id: 'img' + index,\n          src: img.img,\n          alt: img,\n          className: \"bulkImage\"\n        }, img, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: img.imgCardName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"1RUWayR78D+/6J6hRadeEpM062c=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["render","useEffect","useState","bulkImages","fail","Header","initialLists","imgName","clicked","Game","click","setClick","score","setScore","bestScore","setBestScore","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","handleImgClick","e","audio","Audio","preload","imgSrc","target","src","currentImgName","substring","lastIndexOf","indexOf","updatedImg","map","img","play","console","log","index","imgCardName"],"sources":["/home/bradley/repos/memory-card/src/components/Game.js"],"sourcesContent":["import { render } from '@testing-library/react';\nimport { useEffect, useState } from 'react';\nimport bulkImages from './bulkImages';\nimport fail from '../sound/fail.ogg'\nimport Header from './Header';\n\n\nlet initialLists = [\n    { imgName: 'ann', clicked: false },\n    { imgName: 'arisu', clicked: false },\n    { imgName: 'chishiya', clicked: false },\n    { imgName: 'chota', clicked: false },\n    { imgName: 'karube', clicked: false },\n    { imgName: 'kuina', clicked: false },\n    { imgName: 'kuzuryu', clicked: false },\n    { imgName: 'kyuma', clicked: false },\n    { imgName: 'lastboss', clicked: false },\n    { imgName: 'niragi', clicked: false },\n    { imgName: 'tatta', clicked: false },\n    { imgName: 'usagi', clicked: false },\n]\nconst Game = () => {\n    const [click, setClick] = useState(initialLists)\n    const [score, setScore] = useState(0);\n    const [bestScore, setBestScore] = useState(score);\n\n    function shuffle(array) {\n        let currentIndex = array.length, randomIndex;\n\n        // While there remain elements to shuffle.\n        while (currentIndex !== 0) {\n\n            // Pick a remaining element.\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n\n            // And swap it with the current element.\n            [array[currentIndex], array[randomIndex]] = [\n                array[randomIndex], array[currentIndex]];\n        }\n\n        return array;\n    }\n\n    useEffect(() => {\n        shuffle(bulkImages);\n    })\n\n    function handleImgClick(e) {\n        const audio = new Audio(fail);\n        audio.preload = \"auto\";\n        const imgSrc = e.target.src;\n        const currentImgName = imgSrc.substring(imgSrc.lastIndexOf('/') + 1, imgSrc.indexOf('.'))\n        const updatedImg = click.map((img) => {\n            if (img.imgName === currentImgName) {\n                if (img.clicked === true) {\n                    setScore(score - score)\n                    audio.play();\n                    return img;\n                }\n                else {\n                    setScore(score + 1);\n                    if (score >= bestScore) {\n                        setBestScore(score + 1);\n                    }\n                    return {\n                        ...img,\n                        clicked: true,\n                    }\n                }\n            }\n            else {\n                return img;\n            }\n        })\n        setClick(updatedImg)\n    }\n    console.log(click);\n    return (\n        <div className='test'>\n            <Header bestScore={bestScore} score={score} />\n            <div className=\"main\">\n\n                {(bulkImages.map((img, index) => (\n                    <div key={index} className='card'>\n                        <img onClick={(e) => handleImgClick(e)} id={'img' + index} key={img} src={img.img} alt={img} className=\"bulkImage\" />\n                        <span>{img.imgCardName}</span>\n                    </div>\n                )))}\n            </div>\n        </div>\n    )\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}