{"ast":null,"code":"var _jsxFileName = \"/home/bradley/repos/memory-card/src/components/Images.js\",\n  _s = $RefreshSig$();\nimport { render } from '@testing-library/react';\nimport { useEffect, useState } from 'react';\nimport bulkImages from './bulkImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialLists = [{\n  img: 'ann',\n  clicked: false\n}, {\n  img: 'arisu',\n  clicked: false\n}, {\n  img: 'chishiya',\n  clicked: false\n}, {\n  img: 'chota',\n  clicked: false\n}, {\n  img: 'karube',\n  clicked: false\n}, {\n  img: 'kuina',\n  clicked: false\n}, {\n  img: 'kuzuryu',\n  clicked: false\n}, {\n  img: 'kyuma',\n  clicked: false\n}, {\n  img: 'lastboss',\n  clicked: false\n}, {\n  img: 'niragi',\n  clicked: false\n}, {\n  img: 'tatta',\n  clicked: false\n}, {\n  img: 'usagi',\n  clicked: false\n}];\nconst Images = () => {\n  _s();\n  const [click, setClick] = useState(initialLists);\n  useEffect(() => console.log('test'));\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle.\n    while (currentIndex !== 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  }\n  function handleImgClick(e, index) {\n    const imgSrc = e.target.src;\n    const imgName = imgSrc.substring(imgSrc.lastIndexOf('/') + 1, imgSrc.indexOf('.'));\n    console.log('imgname: ', imgName);\n    console.log(click);\n    // setClick([\n    //     ...click,\n    //     { img: e.target, clicked: true }\n    // ])\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: bulkImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: (e, index) => handleImgClick(e, index),\n      id: 'img' + index,\n      src: img,\n      alt: img,\n      className: \"bulkImage\"\n    }, img, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Images, \"F26Tok5YuI/53j6W/G53a5QgD/8=\");\n_c = Images;\nexport default Images;\nvar _c;\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"names":["render","useEffect","useState","bulkImages","initialLists","img","clicked","Images","click","setClick","console","log","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","handleImgClick","e","index","imgSrc","target","src","imgName","substring","lastIndexOf","indexOf","map"],"sources":["/home/bradley/repos/memory-card/src/components/Images.js"],"sourcesContent":["import { render } from '@testing-library/react';\nimport { useEffect, useState } from 'react';\nimport bulkImages from './bulkImages';\n\n\nlet initialLists = [\n    {img: 'ann', clicked: false},\n    {img: 'arisu', clicked: false},\n    {img: 'chishiya', clicked: false},\n    {img: 'chota', clicked: false},\n    {img: 'karube', clicked: false},\n    {img: 'kuina', clicked: false},\n    {img: 'kuzuryu', clicked: false},\n    {img: 'kyuma', clicked: false},\n    {img: 'lastboss', clicked: false},\n    {img: 'niragi', clicked: false},\n    {img: 'tatta', clicked: false},\n    {img: 'usagi', clicked: false},\n]\nconst Images = () => {\n    const [click, setClick] = useState(initialLists)\n\n    useEffect(() => console.log('test'))\n\n    function shuffle(array) {\n        let currentIndex = array.length, randomIndex;\n\n        // While there remain elements to shuffle.\n        while (currentIndex !== 0) {\n\n            // Pick a remaining element.\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n\n            // And swap it with the current element.\n            [array[currentIndex], array[randomIndex]] = [\n                array[randomIndex], array[currentIndex]];\n        }\n\n        return array;\n    }\n    function handleImgClick(e, index) {\n        const imgSrc = e.target.src;\n        const imgName = imgSrc.substring(imgSrc.lastIndexOf('/') + 1, imgSrc.indexOf('.'))\n        console.log('imgname: ', imgName)\n        console.log(click);\n        // setClick([\n        //     ...click,\n        //     { img: e.target, clicked: true }\n        // ])\n    }\n    return (\n        <div className='main'>\n            {bulkImages.map((img, index) => (\n                <img onClick={(e, index) => handleImgClick(e,index)} id={'img' + index} key={img} src={img} alt={img} className=\"bulkImage\" />\n            ))}\n        </div>\n    )\n}\n\nexport default Images;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}